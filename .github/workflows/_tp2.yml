name: Mise en production

on:
  push:
    branches-ignore: [ master ]

jobs:
  linter:
    name: 'ESLint'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backoffice

    steps:

    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        ref: ${{ github.head_ref }}

    - name: Use Node.js 14.x
      uses: actions/setup-node@v3
      with:
        cache-dependency-path: backoffice/package-lock.json
        node-version: 14.x
        cache: 'npm'

    - name: Lint 
      run: |
        npm install -g mocha
        npm install --legacy-peer-deps
        npm run lint

  build_and_unit_test:
    name: 'Tests unitaires'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - 14
          - 'node'
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: '${{ matrix.node }}'
      - uses: actions/checkout@v3
      - name: 'Cache node_modules'
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-v${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-v${{ matrix.node }}-
      - name: Install Dependencies
        run: npm install
      - name: Run Mocha Tests
        run: mocha

  build_and_integration_test:
    name: 'Tests int√©gration'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node:
          - 14
          - 'node'
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: '${{ matrix.node }}'
      - uses: actions/checkout@v3
      - name: 'Cache node_modules'
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-v${{ matrix.node }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-v${{ matrix.node }}-
      - name: Install Dependencies
        run: npm install
      - name: Run Integration Tests
        run: npm test
